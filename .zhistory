vim .zsh
pwd
less prompt.zsh
cd /win3/
history|grep
vim .bash_aliases
vim +54 .bash_aliases
qAZZsE_017
chsh
less gitbk.sh
gitbk
gitbk.sh
.bash gitbk.sh
.zsh gitbk.sh
./gitbk.sh
.gitbk.sh
cdpath
llt .
llt -f .*
llt -d .*
ls .zshrc
ffzy|fpp
fzy|fpp
git-shell
find|fpp
find|fzy|fpp
find|fzy
cd..
ls --help|ffzy
ls --help|fzy
llt|->
llt|ffzy
vim /win3/bashscript/sshs.sh
hgs|xlip
clip
xclip --help
echo 3\
echo 3\
echo 3\
echo 3
cd config
ls|fzy
llt|fzy
vim last_command.zsh
less _git_delete_branch
less mcd
mv last_command.zsh last_command
git clone git@github.com:skwp/dotfiles.git dotfiles_withvim
man zle
help zle
fzy -q
dafdaf
ZLE
zle --help
vim .zhrc
git status .bash_history_summary
fzr-locate-widget
zle -N
vim fzy_locate
higs
mv fzy_locate hgss
zle insert-last-word
zle -R
fzy
FILE=$(ag -G . zle reset | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
zle beginning-of-line
FILE=$(ag -G . zle | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
su yan
zle reset-prompt
_marker_
_marker_1
_marker_mark_1
zle -R '' $display
CD
vim last_command
reboot
TRAPWINCH
zsh/zle
zutil
zle read-command
zless
zle 
zle-line-init
zmoload zle
zmoload .zsh/zle
zmoload zsh/zle
zle .redisplay
clipcopy
apt-get install copyclip
apt-get install clipcopy
xclip --hep
cd /root
git status|
git status|fzy
git add .bash_aliases
git commit -m "update .bash_aliases"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
zle -l
zle-line-finish
_history_complete_word
zle accept-line
apt-get install zle
zshzle
which zle
cd ./.oh-my-zsh
cd plugins
FILE=$(ag -G . {{'placeholder'}} | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . $LBUFFER | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . LBUFFER | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
git add .zhistory
git commit -m "add the .zhistory"
ffzy
cat .zhistory|fzy
alias zhg='cat /root/.zhistory|fzy'
echo 'alias zhg='cat /root/.zhistory|fzy''>>/root/.bash_aliases
echo "alias zhg='cat /root/.zhistory|fzy'">>/root/.bash_aliases
git diff /root/.bash_aliases
zhgs
git ls-files
git ls-tree -d
git ls-tree -r master -name-only
zle redisplay
apt-get install zsh
zsh --versio
zsh --v
zsh --verbose
zmodload
zsh --vi
zsh -v|fzy
sjif
zle
git-clone git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
/root/.fzf/install
proxychains /root/.fzf/install
/bin/fzf
cd /bin
which fzf
which fzy
cd /root/.fzf
bin/fzf
ln -s /root/.fzf/bin/fzf fzf
history|fzf
FILE=$(ag -G --hidden . history  | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G --hidden . history| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G --hidden . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G -hidden . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -hidden -G . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -hidden -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden --exclude-dir anaconda -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden -ignore-dir anaconda -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden --ignore-dir anaconda -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
zle -l|fzf
history-incremental-search-backward
file=$(ffzy)&&vim $file
file=$(find -type file|fzf)&&vim $file
zle -l|fzy
bindkey
cd .fzf
file=$(find -type f|fzf)&&vim $file
zsh -vi
fzf-file-widget
bindkey|ahat
.bashrc
cd /etc/init
cat .bash_history|fzf
q
cd .fzf/shell
vim .fzf.zsh
export
export ENHANCD_DIR 
$ENHANCD_DIR 
echo $ENHANCD_DIR 
echo **
echo FPATH
echo $FPATH
echo $FPATH|ahat
xclip
echo
echo $(hgs|fzy)
hgs|fzy
"^X" insert-last-command-output

ag date.time
echo sfd
dfas
hgs:p
echo($hgs)
echo $hgs
echo $(hgs)
echo sfafd
file=&(hgs)&&echo $file
file=$(hgs)&&echo $file
echo jfe
FILE=$(ag -G . /C_T | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . /bind | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . bind | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . /C-T | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . \C-t | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
cat /root/.bash_history_summary|sort -k1|uniq -f1 >> /root/.bash_history_summary
cat /root/.bash_history|wc -l
cat .zhistory|wc -l
FILE=$(ag -G . zhistory | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
llt .z
llt .z*
FILE=$(ag -G . HISTFILE | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
export **
FILE=$(ag -G . HISTFILE | nerd) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . nerd | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . nerd | fzf) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . insert | fzf) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . output | fzf) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . insert-output | fzf) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . insert- | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden -G . insert- | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden ignore-dir anaconda -G . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden --ignore-dir anaconda -G . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden --ignore-dir anaconda -G . insert | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
insert-last-command-output
which insert-last-command-output
which insert-last-command-output()
which
which-command insert-last-command-output
which -ap insert-last-command-output
which -p insert-last-command-output
which -a insert-last-command-output
type -a insert-last-command-output
type insert-last-command-output
whence  insert-last-command-output
whereis  insert-last-command-output
where  insert-last-command-output
shopt -s extdebug
bash -x insert-last-command-output
whence -a insert-last-command-output
whence -v insert-last-command-output
whence -f insert-last-command-output
 marker mark --command='whence -f insert-last-command-output'
zsh -version
zsh --version
where -f fzf-file-widget
whence -f fzf-file-widget
where  fzf-file-widget
locate insert-last-command-ouput
locate
fzy-locate-widget
fzf-locate-widget
man locate
locate insert-last-command-output
zsh --debug
man zsh|fzf
man zsh|fzy
zsh --help|fzf
vim +8 .zshrc
set
declare -f insert-last-command-output
ag insert-last-command-output
set -x
declare -f fzf-file-widget
vim +16 .zshrc
whence ZSH_VERSION
where ZSH_VERSION
whereis ZSH_VERSION
declare -f ZSH_VERSION
 fpath
typeset -ft insert-last-command-output
typeset +ft insert-last-command-output
declare ZSH_VERSION
ZSH_VERSION
$ZSH_VERSION
whence -v ZSH_VERSION
whence -v fzf-cd-widget
whence -v fzf-cd-widget path
zsh -|fzy
zsh -**|fzy
zsh -v
setopt xtrace
typeset -ft fzf-completion
fzf-completion
ag git_prompt_info
hg
ag -rgit_prompt_info
ag -r insert-last-command-output
lls
ag -r git_prompt_info
declare -f git_prompt_info
whence -v  git_prompt_info
where whence
zsh
cat .zsh_history|wc -l
fzf -
man fzy|fzf
man fzf|fzf
cat /root/.zhistory|fzf -q
cat /root/.zhistory|fzf -q hhh
zhg
cat /root/.zhistory|sort -k1|uniq -f1 >> /root/.bash_history_summary
cat /root/.zhistory|wc -l
aliases|fzf
aliases
alias
alias|fzy
alias|fzf -q
alias|fzf -q sljf
.zshrc
cd configs
cd post
f
llt .bash_history_summary
git add add .bash_history_summary
git add 
git add .bash_history_summary
gm -m "update the .bash_history_summary"
gm "update the .bash_history_summary"
git ls-tree 
git ls-tree HEAD
fpp
git ls-tree HEAD|fpp
cat ./.bash_history_summary_log|wc -l
cat ./.bash_history_summary_log
declare -f fzf-history-widget
declare -f fzf-history-widget|ahat
cd functions
hgss
declare -f fzf-cd-widget
ag bindkey|fzf
 marker mark --command='dklf'
cat>/dev/null
ag bindkey
k
declare accept-and-hold
declare -f accept-and-hold
where accept-and-hold
vim hgss
ag accept-and-hold
FILE=$(ag accept-and-hold | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
bindkey|fzy
apt-get install zsh-beta
zsh-beta
where zsh-beta
useradd -s /bin/zsh-beta root
usermod -s /bin/zsh-beta root
zsh-beta --version
apt-get upgrade
apt-get install zsh-dev
declare hgss
apt-key list
apt-key list|fzy
cat /root/.bash_history|sort -k1|uniq -f1 >> /root/.bash_history_summary
tar xzf zsh-5.4.2.tar.gz
cd zsh
tar xzf zsh-5.4.2.tar.gz .
tar xvzf zsh-5.4.2.tar.gz
cd zsh-5.4.2
top
dpkg -i /data/zsh/zsh_5.4.2-1_amd64.deb
whence -v fzf-completion
whence -v hgg
whence -v bindkey
whence -v history-search-backward
whence -v _fzf_complete_export
whence -v _zsh-mime-handler
whence -v adduser
whence -v HISTFILE
whence -v &HISTFILE
whence -v $HISTFILE
$HISTFILE
echo $HISTFILE
whence -v _marker_get
whence -v zle
hgs
git diff .bash_history_summary
vim .zhistory
cat .bash_history_summary|wc -l
cat .bash_history_summary
whence -v hgss
cat ./.bash_history_summary|wc -l
git checkout .bash_history_summary
vim 
\
cat /root/.bash_history_summary|wc -l
vim history.zsh
vim +5 /root/.zshrc
ag ${
ag '${'
ag '$'
vim +5 history.zsh
vim +11 history.zsh
vim +10 history.zsh
vim +9 history.zsh
HSLINES
$HSLINES
echo $HSLINES
whos
who $HSLINES
 marker mark --command='git log --oneline | fzf --multi --preview '"'"'git show {+1}'
 marker mark --command='git log --oneline | fzf --multi --preview '"'"'git show {+1}'"'"''
git log --oneline | fzf --multi --preview 'git show {+2}'
git log --oneline | fzf --multi --preview 'git show +2'
git log --oneline | fzf --multi --preview 'git show'
fzf-tmux
vf
ag vf
ag 'vf()'
ag 'vf()'|fzf
cat /root/.viminfo
cat /root/.viminfo|fzf
cat /root/.viminfo|fpp
locate /
locate /|fzf
locate /|fzf -q $LBUFFER
locate /|fzf -q "$LBUFFER"
 history|fzf --q "$LBUFFER"
 history|fzf -q "$LBUFFER"
 history|fzf -q "LBUFFER"
ag fzf_
whence -v _fzf_complete_unset
whence -v _fzf_feed_fifo
cd shell
vim README
find -d|fzf
find -f|fzf
find -type f|fzf
ln -s dotfiles/vimrc .vimrc
ln -s dotfiles/vim .vim
cd .vimrc
apt-get install vim
apt-get install NeoVim
apt-get install Vim 8
apt-get install Vim8
cd /data
git clone https://github.com/vim/vim.git
cd src
make distclean
make
sudo make install
ls vim
llt vim
who vim
type vim
type -f vim
cd /usr/bin
/usr/bin/vim --version
/data/src/vim --version
/data/vim/src/vim --version
type /data/src/vim
type /data/vim/src/vim
where vim
dpkg -r vim
cp vim /usr/bin/
vim --version
vim completion.zsh
cd dotfiles
lc ..
ln -s dotfiles/vim/ .vim
cd vim
mv .vim .vim.backup
cd .vim.backup
ln -sf dotfiles/vim/ .vim
vim
vim vimrc.bundles
cd bin
less .vimrc
rm vimrc.bundles
rm .vimrc.bundles
ln -s dotfiles/vimrc.bundles .vimrc.bundles
vim .vimrc
\

service
service --full-restart
service rc.local restart
service rc.local start
service rc.local --full-restart
ps aux|grep 7778
netstat -anop|fzy
getent services
getent services|fzy
service list
service --status-all
getent services|fzf
mkdir -p /root/bin
cd /root/bin
curl -o /root/bin/tldr 
curl -o /root/bin/tldr https://raw.githubusercontent.com/raylee/tldr/master/tldr
chomd +x /root/bin/tldr
chmod +x /root/bin/tldr
cp tldr /usr/bin
tldr upstart
tldr curl
tldr system
tldr list|fzy
tldr --list|fzy
tldr xclip
cd /root/.confg/tldr
cd /root/.config/tldr
cd common
git clone git@github.com:tldr-pages/tldr.git
cd pages
cp -prd * /root/.config/tldr
tldr --list
tldr -|fzf
tldr sysclt
tldr --list|fzf
tldr systemctl
supervisor
ag runtimepath
ag runtimepath|fzy
ag --hidden --ignore-dir anaconda/ runtimepath|fzy
man Vim
man Vim|fzy
vim --help|fzy
tldr vim
cd 
vim rc.local
cd /win3|python -m http.server 7778
cd /win3&&python -m http.server 7778
c
an
zsh activate
source
source activate
usermod -s /bin/bash root
cd .vim
cd plugin
ag Plug .vimrc.bundles
ag ctag .vimrc.bundles
ag ctag .vimrc
ag plug .vimrc.bundles
cd vimrc
cd bim
ag ctag
ag -r ctag
ag -r ctags
cd ftplugin
ag Plug
ag hooks
ag bundles
vim /root/.zshrc
which PATH
whO PATH
whence PATH
whence -f PATH
declare -f  PATH
whereis PATH
whereis $PATH
$PATH
whence -v PATH
whence -v HISTFILES
whence -v $PATH
whence -v ZSH_NAME
ZSH_NAME
declare -f ZSH_NAME
ag PATH
usermod -s /bin/zsh root
cd /root/anaconda/bin/
ls conda
echo $PATH
vim path.zsh
conda
conda --version
cd /win3
wget https://www.anaconda.com/blog/developer-blog/how-to-get-ready-for-the-release-of-conda-4-4/
ag $ conda
ag $ conda index.html
ag "conda" index.html
ag "$conda" index.html
ag "$ conda" index.html
ag "conda " index.html|fzf
conda config --add channels conda-canary
conda update conda
conda config --system --add pinned_packages conda-canary::conda
FILE=$(ag -G . PATH | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
conda.sh
cd etc
cd profile.d
git diff .zshrc
echo ". /root/anaconda/etc/profile.d/conda.sh">>.zshrc
history -n
history
tldr -h
tldr -h|fzf
which tldr
tldr -h|fzy
cp dd.md conda_update.md
conda activate python34
echo 'alias sap34="conda activate python34"
echo 'alias sap34="conda activate python34"' >> /root/.bash_aliases
conda activate patent
conda activate **
conda list
conda env list
conda activate patent-landscape
echo 'alias sap2="conda activate patent-landscape"' >> /root/.bash_aliases
sap3
vim conda_update.md
tldr -
tldr --update
tldr conda_update
tldr -u conda_update
tldr conda_update.md
tldr clear
cd linux
cp dd.md dd2.md
tldr -u dd2.md
tldr -u
tldr dd2.md
tldr dd
tldr dd2
vim index.json
tldr
tldr list
tldr -l
tldr -l|fzf
tldr update
tldr --help
tldr -p
tldr -p linux
vim /etc/rc.local
llt .*
echo "conda config --add channels conda-canary" >> conda_updata.sh
whence -v hgs
cat /root/.bash_history_summary|fzf --multi 'echo {+1}>>conda_update'
cat /root/.bash_history_summary|fzf --multi excute('echo >>conda_update')
cat /root/.bash_history_summary|fzf --multi excute('echo{+1} >>conda_update')
cat /root/.bash_history_summary|fzf --multi excute!('echo{+1} >>conda_update')
cat /root/.bash_history_summary|fzf --multi excute!('echo >>conda_update')
apt-get install pbcopy
fzf -bind "f1:execute(cat {} >> conda_update.sh)+abort"
fzf --bind "f1:execute(cat {} >> conda_update.sh)+abort"
 marker mark --command='fzf --bind "f1:execute(cat {} >> conda_update.sh)+abort"'
cat /root/.bash_history_summary|fzf --bind "f1:execute(cat {} >> conda_update.sh)+abort"
cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(cat {} >> conda_update.sh)"
less conda_updat
\
cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> conda_update.sh),f2:execute(less conda_update.sh)"
git add conda_update.sh
gm "add conda_update.sh"
git ls-tree -r master --name-only|fpp
git log --oneline | fzf --multi --preview 'git show {+1}'
 marker mark --command='git ls-tree -r master --name-only|fzf --multi --preview '"'"'git diff {+1}'"'"''
git add .zshrc
git add .zsh
type .zsh
cd .zsh
llt .zsh
git
git add dotfiles/
git ls-tree
git add dotfiles/*
git ls-tree HEAD~0 
ls .git
dit dff
git dff
rm .git
rm -r .git
git add dotkfjia
git add
git add dotfififjiad
git add dotfiles
git commit -m "git add the dotfiles"
git ls-tree HEAD~0
vim zshrc
vim .zshrc
git diff dotfiles/.zshrc
cp /data/dotfiles/zshrc dotfiles/zshrc
git diff dotfiles/zshrc
git add lll
tldr git|fzf
tldr git|fzy
tldr git
tldr git_add
tldr git add
tldr git-add
tldr git-add|fzy
tldr git-list|fzy
git status --short
conda deactivate
git show HEAD~0 --stat
git show master --stat
git show  --stat
git status -s
git diff --cached
git ls-tree -r master
git ls-tree master

qAzzSe_017
git ls-files -stage
git ls-files --stage
su root
netstat -ano|grep 8888
python -m http.server 7778
nohup python -m http.server 7778 &
echo "alias start7778='nohup python -m http.server 7778 &'" >> /root/.zshrc
echo $LINES
sap34
alias|fzf
kill 32054
netstat -anop|fzf
kill 32298
start7778
echo 'alias start8888="nohup jupyter notebook --ip=* --allow-root &"' >> /root/.zshrc
sap2
start8888
less
less nohup.out
LS
llt .sh
less conda_update.sh
su
git ls-files --stage|ahat
netstat -ano|grep 7778
git ls-files --deleted
git ls-files -
git ls-files -m
git ls-files -m|fzf --multi --preview 'git diff {+1}'
git ls-files -s|fzf --multi --preview 'less {+1}'
git ls-files -s --ful-name|fzf --multi --preview 'less {+1}'
git ls-files -s --full-name|fzf --multi --preview 'less {+1}'
git ls-files -s --full-name|fpp
git ls-tree -r master --name-only|fzf --multi --preview 'less {+1}'
git ls-tree -r master --name-only|fzf --multi --preview 'git diff {+1}'
ls *.sh
llt install
llt install.sh
llt *install.sh
llt *.sh
less install.sh
llt nbssh.sh
less nbssh.sh
vim gits.sh
bypy
less README.md
 marker mark --command='cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> conda_update.sh),f2:execute(less conda_update.sh)"'
 marker mark --command='cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> {{conda_update.sh}}),f2:execute(less {{conda_update.sh}})"'
marker remove
cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> install_marker.sh),f2:execute(less install_marker.sh)"
export OPT=/opt
bash install_marker.sh
vim install_marker.sh
bindkey|fzf
declare -f hgss
cat install_marker.sh|fzf
cd $OPT/marker
fzf
python install.py
git show master
cd tldr
cd ...
cd
llt
cd ..
ls
git ls-tree -r master --name-only
git ls-tree  master --name-only
git diff
git ls-files --stages
git ls-files -s
git status
git ls-files --cached
git ls-files --modified
git status|fzf
cd
su
git ls-files --modified
history
llt
llt .sh
llt *.sh
less install_marker.sh
echo $OPT
echo "export $OPT=/opt/" >> .zshrc
su
echo "export $OPT='/opt/'" >> .zshrc
vim .zshrc
su
vim .zshrc
su
vim .zshrc
cd
ag export
cd
vim .zshrc
su
echo $OPT
ls
echo $OPT
ls
echo $OPT
ls
echo $OPT
ls
git ls-tree  master --name-only
git diff .zshrc
git diff dotfiles/zshrc
git diff .zshrc
vim .zshrc
git diff .zshrc
git diff dotfiles/zshrc
llt .zshrc
cp /data/dotfiles/zshrc dotfiles/zshrc
llt
cp /data/dotfiles/zsh dotfiles/zsh
cp -r /data/dotfiles/zsh dotfiles/zsh
llt
cd
git ls-files -s --full-name|fzf --multi --preview 'less {+1}'
git ls-files -s --short-name|fzf --multi --preview 'less {+1}'
git ls-files -s |fzf --multi --preview 'less {+1}'
git diff-files
git ls-tree  master --name-only
cd
git ls-tree  master --name-only
cd
git ls-tree  master --name-only
su
bindkey|fzf
cd
cd ..
fzf
cd /win3/marker
ls
python install.py
vim /root/.zshrc
cd
ffzy
su
bindkey|fzf
cd
git ls-tree -r master --name-only|fzf --multi --preview 'git diff {+1}'
git ls-files -m|fzf --multi --preview 'git diff {+1}'
cd
git ls-files -m|fzf --multi --preview 'git diff {+1}'
files=$(git ls-files -m)
files
echo $files
git add $files
ls
git add $files
git add -i
git ls-files -m|fzf --multi --preview 'git diff {+1}'
git diff .bash_history_summary
cat .zsh_history
cat .zsh_history|wc -l
cat .zhistory|wc -l
cat .bash_history_summary|wc -l
git diff .bash_history_summary|fzf
cd
cat .bash_history_summary|fzf
cd
ag .bash_history_summary
echo HSLINES
echo $HSLINES
file=$(ffzy)&&vim $file
FILE=$(ag -G . bash_history_summary | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
ls
git ls-files -m|fzf --multi --preview 'git diff {+1}'
cd
git ls-files -m|fzf --multi --preview 'git diff {+1}'
git add -i
git ls-files -m|fzf --multi --preview 'git diff {+1}'
git add -i
git ls-tree -r master --name-only|fzf --multi --preview 'git diff {+1}'
git ls-files -m|fzf --multi --preview 'git diff {+1}'
vim .zshrc
ag export
cd
ag export
ls
cd
ls
ls .bash*
su
cd
su
git add .bash_history
git add -i
git rm -i
git rm -i --cached bash_history
git rm -i --cached .bash_history
git rm --cached .bash_history
git add -i
top
.bas
bindkey|fzf
cd
ls
cd
ls
ncdu -f /data/ncdu_export 
cat /root/.zshrc|fzf --multi --bind "f1:execute(echo {} >> .bash_aliases),f2:execute(less .bash_aliases)"
vim .zshrc
git add .zshrc .bash_aliases
git add -i
