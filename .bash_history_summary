
 ?
 &
?
\: 1518798616:0;cd
6c
add -i
ag '$'
ag '${'
ag ${
ag accept-and-hold
ag ag_handler
ag ag_handler ./*
ag airline ./*
ag airline ./*|fzf
ag airlinetoggle
ag airlinetoggle ./*
ag .bash_history_summary
ag bindkey
ag bindkey|fzf
ag bundles
ag "C-"
ag "C-["
ag "C-[" .
ag C-[
ag c-d ./*|fzf
ag "C-"|fzf
ag cnext
ag cnext|fzf
ag cnext ./*|fzf
ag cnext ./*|fzy
ag cnext map
ag cnext&&map
ag cn ./*|fzf
ag $ conda
ag "$ conda" index.html
ag "$conda" index.html
ag "conda" index.html
ag $ conda index.html
ag "conda " index.html|fzf
ag <c-p>
ag c-p
ag cprevious ./*|fzf
ag C-t
ag ctag
ag ctags
ag ctag .vimrc
ag ctag .vimrc.bundles
ag CtrlP
ag ctrlp_cmd
ag CtrlPpath
ag CtrlPPATH
ag ctrlp_user_command
ag -d 5 focus
ag -D 5 focus
ag -D 7 -G .vim focus .
ag date.time
ag --depth=11 -G .vim focus .
ag --depth=11 -G .vim focus ./vim
ag --depth=11 -G .vim -i nerdfocus ./vim
ag --depth=11 -G .vim nerdfocus ./vim
ag --depth=11 -G .vim NERDfocus ./vim
ag --depth=1 -G .vim focus ./*
ag --depth=2 -G .vim focus .
ag --depth=3 -G .vim focus .
ag --depth=3 -G .vim focus ./*
ag --depth=4 -G .vim focus .
ag --depth 5 focus
ag --depth=5 -G .vim focus .
ag --depth=6 -G .vim focus .
ag --depth=6 -G .vim focus ./*
ag --depth=7 -G .vim focus .
ag --depth=7 -G .vim focus ./*
ag --depth=8 -G .vim focus .
ag --d tc_ |fzf
ag -d tc_ |fzf
ag E6
ag e612
ag E612
ag E6|fzf
ag E7
ag E712
ag E7|fzf
ag export
ag focus
ag focus -
ag focus .
ag focus ./*
ag focuse
ag focus .vim
ag focus ./vim
ag|fzf
ag fzf_
ag "g:"
ag -G focus .
ag -G focus .vim
ag git_prompt_info
ag Glog
ag -G .py ProgressBar .
ag -G .py read_csv ./*
ag -G .py read_csv ./*|ahat
ag -G .vim focus
ag -G .vim focus 
ag -G .vim focus .
ag -G .vim focus ./*
ag -G .vim "$HSLINES" .
ag --help
ag hgss
ag --hidden "$HSLINES" .
ag --hidden "HSLINES" .
ag --hidden --ignore-dir anaconda/ runtimepath|fzy
ag hooks
ag "$HSLINES"
ag "$HSLINES" .
ag "HSLINES"
ag $HSLINES
ag -i "bindkey"|fzf
ag -i c-
ag -i c-|fzf
ag --i "<c-p>"
ag -i "<c-p>"
ag -i "<c-p>" ./*
ag -i c-p
ag -i "c-t" ./*|fzf
ag -i "ctrlp_cmd" ./*
ag -i "ctrlp_map" ./*
ag -i -]|fzf
ag -i "-]"|fzf
ag -i "jump"|fzf
ag -i jump|fzf
ag -i "map"|fzf
ag -i nerd ./*
ag -i nerdfocus ./*
ag -i nerdfocus ./vim
ag -i nerdtreefocus ./*
ag -i "nmap"|fzf
ag insert-last-command-output
ag "let g:"
ag map ./*
ag map ./*|fzf
ag nerd
ag NERD
ag NERDF
ag NERDFocus
ag NerdTree
ag nmap
ag nmap ./*
ag nmap ./*|fzf
ag noremap
ag normap
ag PATH
ag $PATH
ag Plug
ag plug .vimrc.bundles
ag Plug .vimrc.bundles
ag ProgressBar
ag quickfix
ag -r ctag
ag -r ctags
ag -r ctrlp
ag -r CtrlP
ag read_csv
ag -r focus
ag -r git_prompt_info
ag -rgit_prompt_info
ag -r -G .vim focus .
ag -r -G .vim focus ./*
ag -r insert-last-command-output
ag runtimepath
ag runtimepath|fzy
ag tag
ag tagbar
ag taglist
ag tagsbar
ag tmux
ag tmux ./*
ag tmux.conf
ag tmux.conf .
ag tmux.conf ./
ag tmux.conf ./*
ag vf
ag 'vf()'
ag 'vf()'|fzf
ag ./vim focus
ag zle ./*
ag zshenv
ag zshenv .zshrc
alias
alias|fzf -q
alias|fzf -q sljf
alias|fzy
alias zhg='cat /root/.zhistory|fzy'
an
apt-cache search libevent
apt-config
apt-config dump
apt-config list
apt-get
apt-get install clipcopy
apt-get install copyclip
apt-get install --help|fzf
apt-get install kconsole
apt-get install konsole
apt-get install libevent
apt-get install list
apt-get install neovim
apt-get install NeoVim
apt-get install pbcopy
apt-get install tmux
apt-get install vim
apt-get install Vim8
apt-get install Vim 8
apt-get install xshell
apt-get install xterm
apt-get install zle
apt-get install zsh
apt-get install zsh-beta
apt-get install zsh-dev
apt-get intall xterm
apt-get list
apt-get remove docker
apt-get remove neovim
apt-get remove tmux
apt-get remove tumx
apt-get update
apt-get upgrade
apt --help|fzf
apt-key list
apt-key list|fzf
apt-key list|fzy
apt list
.bas
.bash gitbk.sh
bash install_marker.sh
bash install-sh
.bashrc
bash -x insert-last-command-output
bind
 c
cat
cat .bash_history|fzf
cat .bash_history_summary
cat .bash_history_summary|fzf
cat ./.bash_history_summary_log
cat ./.bash_history_summary_log|wc -l
cat ./.bash_history_summary|wc -l
cat .bash_history_summary|wc -l
cat>/dev/null
cat /etc/shells|fzf
cat install_marker.sh|fzf
cat plug.vim|fzf
cat README|ahat
cat /root/.bash_history|sort -k1|uniq -f1 >> /root/.bash_history_summary
cat /root/.bash_history_summary|fzf --bind "f1:execute(cat {} >> conda_update.sh)+abort"
cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(cat {} >> conda_update.sh)"
cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> conda_update.sh),f2:execute(less conda_update.sh)"
cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> install_marker.sh),f2:execute(less install_marker.sh)"
cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> libevent_install.sh),f2:execute(less {{libevent_install.sh}})"
cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> libevent_install.sh),f2:execute(less libevent_install.sh)"
cat /root/.bash_history_summary|fzf --multi 'echo {+1}>>conda_update'
cat /root/.bash_history_summary|fzf --multi excute!('echo{+1} >>conda_update')
cat /root/.bash_history_summary|fzf --multi excute('echo{+1} >>conda_update')
cat /root/.bash_history_summary|fzf --multi excute!('echo >>conda_update')
cat /root/.bash_history_summary|fzf --multi excute('echo >>conda_update')
cat /root/.bash_history_summary|sort -k1|uniq -f1 >> /root/.bash_history_summary
cat /root/.bash_history_summary|wc -l
cat /root/.bash_history|wc -l
cat /root/.viminfo
cat /root/.viminfo|fpp
cat /root/.viminfo|fzf
cat /root/.zhistory|fzf -q
cat /root/.zhistory|fzf -q hhh
cat /root/.zhistory|sort -k1|uniq -f1 >> /root/.bash_history_summary
cat /root/.zhistory|wc -l
cat /root/.zshrc|fzf --multi --bind "f1:execute(echo {} >> .bash_aliases),f2:execute(less .bash_aliases)"
cat tags-cn|fzf
cat tags|fzf
cat .vimrc|ahat
cat .vimrc|aht
cat .zhistory|fzy
cat .zhistory|wc -l
cat .zsh_history
cat .zsh_history|wc -l
cd
cd 
cd .
cd ..
cd ...
cd..
cd 97
cd 97*
cd apt
cd autoload
cd bim
cd bin
cd /bin
cd .bin
cd bundle
cd common
cd config
cd .config
cd configs
cd .continuum
cd ctags58
cd ctrlp.vim
cdd
cd /data
cd /data/
cd $(dirname $(fzf))
cd doc
cd dotfiles
cd ./dotfiles/vim/bundle/tagbar
cd etc
cd /etc/
cd /etc/apt
cd /etc/apt/sources.list
cd /etc/apt/sources.list.d
cd /etc/init
cd /etc/pki
cd ftplugin
cd functions
cd .fzf
cd .fzf/shell
cd lib
cd libevent-2.1.8-stable
cd libevent-2.1.8-stable.tar.gz
cd linux
cd maker
cd marker
cd neovim
cd nicknisi_dotfiles
cd numpy
cd numpy-1.11.3-py34_0
cd nvim
cd ./.oh-my-zsh
cd .oh-my-zsh
cd opt
cd $OPT/marker
cd pages
cdpath
cd pkgs
cd plug
cd pluged
cd plugged
cd plugin
cd plugins
cd post
cd profile.d
cd python3.4
cd /root
cd /root/anaconda/bin/
cd /root/bin
cd /root/.bin
cd /root/.confg/tldr
cd /root/.config/tldr
cd /root/dotfiles
cd /root/.fzf
cd shell
cd site-packages
cd sources.list
cd sources.list.d
cd sources.list..d
cd src
cd tc_carretail
cd test_rmlater
cd themes
cd tldr
cd tmux
cd /usr
cd /usr/bin
cd /usr/local
cd /usr/local/bin/
cd /usr/local/bin/bin
cd vim
cd .vim
cd .vim.backup
cd .vimdot
cd vim-interaction
cd vimrc
cd .vimrc
cd vm
cd /win3
cd /win3/
cd /win3/marker
cd /win3|python -m http.server 7778
cd /win3&&python -m http.server 7778
cd zsh
cd .zsh
CD ZSH
cd zsh-5.4.2
chmod u+x nvim.appimage
chmod +x /root/bin/tldr
chsh
chsh --help
chsh -s /bin/zsh
clear
conda activate **
conda activate patent
conda activate patent-landscape
conda activate python34
conda config --add channels conda-canary
conda config --system --add pinned_packages conda-canary::conda
conda deactivate
conda env list
conda list
conda.sh
conda update conda
conda --version
./config
./configure &&make
./configure&&make
cp /data/dotfiles/zsh/configs/history.zsh ./zsh/configs/
cp /data/dotfiles/zsh/configs/post/path.zsh .
cp /data/dotfiles/zsh dotfiles/zsh
cp /data/dotfiles/zsh/functions/hgss ./dotfiles/zsh/functions
cp /data/dotfiles/zshrc dotfiles/zshrc
cp dd.md conda_update.md
cp dd.md dd2.md
cp google-cloud-sdk.list google-cloud-sdk.list.backup
cp google-cloud-sdk.list.save google-cloud-sdk.list.save.backup
cp init.vim ../
cp init.vim.backup init.vim
cp init.vim init.vim.backup
cp marker.sh /root/
cp -prd /data/dotfiles/* .
cp -prd /root/.bin /opt/
cp -prd /root/.config/nvim/* .
cp -prd /root/.config/nvim/* ./nvim
cp -prd * /root/.config/tldr
cp -prd /root/dotfiles/* .
cp -prd /root/nicknisi_dotfiles/config/nvim/* .
cp -prd /win3/nicknisi_dotfiles .
cp -r /data/dotfiles/zsh dotfiles/zsh
cp tldr /usr/bin
cp tmux /usr/local/bin
cp vim /usr/bin/
cp /win3/n
ctag
ctags .
ctags -R .
ctrl-b
ctrl-b n
curl
curl baidu.com
curl --cacert /etc/ssl/certs/ca-certificates.crt ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \~/.local/share/nvim/site/autoload/plug.vim --create-dirs \          
curl-config
curl-config --ca
curl-config --ca ./ssl/certs/ca-certificates.crt
curl-config -ca ./ssl/certs/ca-certificates.crt
curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \\
curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \~/.local/share/nvim/site/autoload/plug.vim --create-dirs \\
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\
curl -fLo ~/.vim/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\
curl http://baidu.com
curl https://baidu.com
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
curl -LO https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage
curl -o /root/bin/tldr 
curl -o /root/bin/tldr https://raw.githubusercontent.com/raylee/tldr/master/tldr
curl ~/.vim/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\
curl www.baidu.com
 c\\va
/data/src/vim --version
declare accept-and-hold
declare -f accept-and-hold
declare -f fzf-cd-widget
declare -f fzf-file-widget
declare -f fzf-history-widget
declare -f fzf-history-widget|ahat
declare -f git_prompt_info
declare -f hgss
declare -f insert-last-command-output
declare -f  PATH
declare -f ZSH_NAME
declare -f ZSH_VERSION
declare hgss
declare ZSH_VERSION
dfas
df -lh
dit dff
docker
dpkg --help|fzf
dpkg -i /data/zsh/zsh_5.4.2-1_amd64.deb
dpkg -r vim
e
echo "\
echo **
echo 3
echo 3\
echo 'alias sap2="conda activate patent-landscape"' >> /root/.bash_aliases
echo 'alias sap34="conda activate python34"
echo 'alias sap34="conda activate python34"' >> /root/.bash_aliases
echo "alias start7778='nohup python -m http.server 7778 &'" >> /root/.zshrc
echo 'alias start8888="nohup jupyter notebook --ip=* --allow-root &"' >> /root/.zshrc
echo 'alias zhg='cat /root/.zhistory|fzy''>>/root/.bash_aliases
echo "alias zhg='cat /root/.zhistory|fzy'">>/root/.bash_aliases
echo "/bin/zsh" >> /etc/shells
echo "conda config --add channels conda-canary" >> conda_updata.sh
echo $ENHANCD_DIR 
echo "export $OPT=/opt/" >> .zshrc
echo "export $OPT='/opt/'" >> .zshrc
echo $files
echo FPATH
echo $FPATH
echo $FPATH|ahat
echo $hgs
echo $(hgs)
echo($hgs)
echo $(hgs|fzy)
echo $HISTFILE
echo HSLINES
echo  $HSLINES
echo $HSLINES
echo "if filereadable($HOME . "/.vimrc.local")"
echo jfe
echo "let g:ctrlp_cmd='CtrlP :pwd'" >> /root/.vimrc
echo $LINES
echo $OPT
echo $PATH
echo ". /root/anaconda/etc/profile.d/conda.sh">>.zshrc
echo sfafd
echo sfd
echo $shell
echo $SHELL
echo $term
endif\
$ENHANCD_DIR 
ethogs eth2
exit
export **
export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
export ENHANCD_DIR 
export OPT=/opt
f
FILE=$(ag accept-and-hold | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag c-d ./*| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . bash_history_summary | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . /bind | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . bind | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . c-d | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G ./* c-d| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . \C-t | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . /C_T | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . /C-T | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . export| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . export | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G --hidden . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G -hidden . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G --hidden . history| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G --hidden . history  | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . HISTFILE | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . HISTFILE | nerd) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . HOME=| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . HOME | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . insert | fzf) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . insert- | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . insert-output | fzf) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . $LBUFFER | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . LBUFFER | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . nerd | fzf) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . nerd | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . nmap | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . output | fzf) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . PATH | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . {{'placeholder'}} | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . zhistory | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . zle | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -G . zle reset | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden --exclude-dir anaconda -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -hidden -G . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -hidden -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden -G . insert- | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden --ignore-dir anaconda -G . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden ignore-dir anaconda -G . | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden --ignore-dir anaconda -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden -ignore-dir anaconda -G . history | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden --ignore-dir anaconda -G . insert | fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden ./* leader| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden "<leader> -r" ./*| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag -hidden "<leader> -r" ./*| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden ./* "RunInteractive"| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag --hidden "RunInteractive" ./*| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag ./* leader| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag leader ./*| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
FILE=$(ag "<leader> -r" ./*| fzy) && a1=$(echo "$FILE"|cut -d ':' -f 1)&&a2=$(echo "$FILE"|cut -d ':' -f 2)&&vim +$a2 $a1
file=$(ffzy)&&vim $file
file=$(find -type f|fzf)&&vim $file
file=$(find -type file|fzf)&&vim $file
file=$(hgs)&&echo $file
file=$(ps aux|fzy)&&a=$(echo $file|cut -c5-10)&&kill $a
files
files=$(git ls-files -m)
find -d
find -d|fzf
find -d tc_ |fzf
find -f|fzf
find|fpp
find -type d|fzf
find type -d|fzf
find -type f|fzf
 fpath
fzf -
fzf --bind "f1:execute(cat {} >> conda_update.sh)+abort"
fzf -bind "f1:execute(cat {} >> conda_update.sh)+abort"
fzf-completion
fzy -q
ga -i
gc "correct the history.zh and sync to the previous /data/dotfiles, and add the zsh.local as the oh-my-zsh"
gc git@github.com:neovim/neovim.git
gc git@github.com:nicknisi/dotfiles.git
gc git@github.com:nicknisi/dotfiles.git nicknisi_dotfiles
gc -m "correct the history.zh and sync to the previous /data/dotfiles, and add the zsh.local as the oh-my-zsh"
getent services
getent services|fzf
getent services|fzy
gid add -i
giit checkout tmux.conf
git
git add
git add 
git add -a
git add add .bash_history_summary
git add -all
git add --all
git add .bash_aliases
git add .bash_history
git add .bash_history_summary
git add conda_update.sh
git add dotfififjiad
git add dotfiles
git add dotfiles/
git add dotfiles/*
git add ./dotfiles/zsh/functions
git add ./dotfiles/zsh/functions/hgss
git add dotkfjia
git add $files
git add -i
git add in
git add init.vim
git add install_marker.sh
git add lll
git add marker
git add marker.sh
git add nvim
git add  ./nvim
git add  ./nvim/
git add ./nvim
git add -r ./nvim
git add .tmux.conf
git add .vimrc
git add .vimrc.bundles
git add .zhistory
git add .zsh
git add .zshrc
git add .zshrc .bash_aliases
git add .zshrc.local
gitbk
git checkcout .config/nvim/init.vim
git checkout
git checkout .
git checkout .bash_history_summary
git checkout .config/nvim/init.vim
git checkout init.vim
git checkout /root/.config/nvim/init.vim
git checkout tmux.conf
git chekcout .config/nvim/init.vim
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
git-clone git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
git clone git@github.com:skwp/dotfiles.git dotfiles_withvim
git clone git@github.com:tldr-pages/tldr.git
git clone https://github.com/tmux/tmux.git
git clone https://github.com/vim/vim.git
git commit 'add the symbolink .zshrc .zsh'
git commit -m "add the dotfiles init.vim"
git commit -m "add the hgss"
git commit -m "add the init.vim"
git commit -m "add the marker"
git commit -m 'add the symbolink .zshrc .zsh'
git commit -m "add the .tmux.conf"
git commit -m "add the vim bundles"
git commit -m "add the .zhistory"
git commit -m "add .vimrc"
git commit -m "comment out the nvim"
git commit -m "fix the path to the local dotfiles"
git commit -m "git add the dotfiles"
git commit -m "init"
git commit -m "remove the nvim"
git commit -m "rm the history"
git commit -m "rm the new add nvim"
git commit -m 'update'
git commit -m "update"
git commit -m "update .bash_aliases"
git dff
git diff
git diff .bash_history_summary
git diff .bash_history_summary|fzf
git diff --cached
git diff .config/nvim/init.vim
git diff dotfiles/vimrc
git diff dotfiles/zshrc
git diff dotfiles/.zshrc
git diff-files
git diff init.vim
git diff /root/.bash_aliases
git diff .vimrc
git diff .zshrc
git diff.zshrc
git init
git log
git log|fzf
git log --oneline | fzf --multi --preview 'git show'
git log --oneline | fzf --multi --preview 'git show {+1}'
git log --oneline | fzf --multi --preview 'git show {+2}'
git log --oneline | fzf --multi --preview 'git show +2'
git ls-files
git ls-files -
git ls-files --cached
git ls-files --deleted
git ls-files|fzf
git ls-files init.vim
git ls-files -m
git ls-files -m|fzf --multi --preview 'git diff {+1}'
git ls-files --modified
git ls-files -s
git ls-files -s --full-name|fpp
git ls-files -s --full-name|fzf --multi --preview 'less {+1}'
git ls-files -s --ful-name|fzf --multi --preview 'less {+1}'
git ls-files -s|fzf --multi --preview 'less {+1}'
git ls-files -s |fzf --multi --preview 'less {+1}'
git ls-files -s --short-name|fzf --multi --preview 'less {+1}'
git ls-files -stage
git ls-files --stage
git ls-files --stage|ahat
git ls-files --stages
git ls-tree
git ls-tree 
git ls-tree *
git ls-tree -d
git ls-tree HEAD
git ls-tree HEAD~0
git ls-tree HEAD~0 
git ls-tree HEAD|fpp
git ls-tree master
git ls-tree master|fzf
git ls-tree  master --name-only
git ls-tree -r master
git ls-tree -r master --name-only
git ls-tree -r master -name-only
git ls-tree -r master --name-only|fpp
git ls-tree -r master --name-only|fzf --multi --preview 'git diff {+1}'
git ls-tree -r master --name-only|fzf --multi --preview 'less {+1}'
git push orgin master
git push origin master
git reflog
git relog
git revert HEAD~1
git revert --hel
git revert --help
git rm --cached .bash_history
git rm --cached .vimrc
git rm --cached .zhistory
git rm --cached .zsh
git rm --cached .zshrc
git rm -i
git rm -i --cached .bash_history
git rm -i --cached bash_history
git rm nvim
git rm ./nvim
git rm ./nvim/*
git rm -rf ./nvim
git rm -r  nvim
git rm -r ./nvim
git rm -r ./nvim/*
git rm -r ./nvim/*|fzf
git-shell
git show HEAD~0 --stat
git show HEAD~10 --stat
git show HEAD~1 --stat
git show master
git show master --stat
git show  --stat
git status
git status|
git status .bash_history_summary
git status|fzf
git status|fzy
git status -s
git status --short
gm "add conda_update.sh"
gm "change the bin/marker.sh to a link type, so I can include all configure files into the root"
gm "correct the history.zh and sync to the previous /data/dotfiles, and add the zsh.local as the oh-my-zsh"
gm "cp the cur dot"
gm -m "i change the bin/marker.sh to a link, because I want to include all the sh files into the root"
gm -m "update the .bash_history_summary"
gm "update the .bash_history_summary"
grep /zsh$ /etc/shells | wc -l
gs
help zle
hg
 history|fzf --q "$LBUFFER"
 history|fzf -q "$LBUFFER"
 history|fzf -q "LBUFFER"
history|grep
history -n
HISTSZIE
h j k
hop
if filereadable($HOME . "/.vimrc.local")\
if filereadable( . "init.local")\
" >> init.vim
insert-last-command-output
kill 2606
kill 32054
kill 32298
kill 3939
killall tmux
killtmux
lc ..
less
less build-zsh.sh
less conda_updat
less conda_update.sh
less /etc/apt/sources.list
less gitbk.sh
less _git_delete_branch
less install_marker.sh
less install.sh
less mcd
less nbssh.sh
less NERDTree.txt
less nohup.out
less prompt.zsh
less README.md
less /root/libevent_install.sh
less /root/.zsh/functions/hgss
less vimrc
less .vimrc
less .zhistory
lls
llt .
llt .*
llt *
llt*
llt .bash_history_summary
llt bin
llt .c*
llt cat
llt -d
llt -d .*
llt -d bin
llt -d .c*
llt -f .*
llt|ffzy
llt install
llt *install.sh
llt install.sh
llt marker
llt n*
llt nbssh.sh
llt /root/.bin
llt .sh
llt *.sh
llt test_rmlater
llt *tmux*
llt /usr/lib|fzf
llt vim
llt .vim*
llt *vim
llt *vim*
llt vim*
llt vimrc
llt .vimrc
llt .vimrc*
llt .z
llt .z*
llt .zsh
llt .zsh*
llt .zshrc
ln -s /bin/zsh /usr/bin/zsh
ln -s ./d.dotfiles/tmux.conf .tmux.conf.local
ln -s ./dotfiles/tmux.conf .tmux.conf
ln -s dotfiles/vimrc.bundles .vimrc.bundles
ln -s dotfiles/vimrc .vimrc
ln -s dotfiles/vim .vim
ln -s dotfiles/vim/ .vim
ln -s dotfiles/zshenv .zshenv
ln -s dotfiles/zsh .zsh
ln -sf /dev/null  .zshrc.local
ln -sf ./dotfiles/tmux.conf .tmux.conf
ln -sf ./.dotfiles/tmux.conf .tmux.conf.local
ln -sf ./.dotfiles/tmux/tmux.conf.symlink .tmux.conf.local
ln -sf .dotfiles/tmux/tmux.conf.symlink .tmux.conf.local
ln -sf ./.dotfiles/tmux/tmux.conf .tmux.conf.local
ln -sf dotfiles/vim/ .vim
ln -sf dotfiles/zshrc .zshrc
ln -sf dotfiles/zsh .zsh
ln -sf n.dotfiles/tmux/tmux.conf.symlink .tmux.conff.local
ln -sf nicknisi_dotfiles/tmux/tmux.conf.symlink .tmux.conf
ln -sf null .tmux.conf.local
ln -sf null .tmux.conf.local 
ln -sf .tmux.conf ./dotfiles/tmux.conf
ln -sf zsh .
ln -s   n
ln -s nicknisi_dotfiles/ .dotfiles
ln -s nicknisi_dotfiles/tmux/tmux.conf.symlink .tmux.conf
ln -s null .tmux.conf.local
ln -s null .tmux.conf.local 
ln -s /root/.fzf/bin/fzf fzf
ln -s /root/marker.sh marker.sh
ln -s .tmux.conf ./dotfiles/tmux.conf
ln -s .tmux.conf nicknisi_dotfiles/tmux/tmux.conf.symlink
ln -s /usr/bin/zsh /bin/zsh
ln -s /usr/lib/libevent-2.1.so.6 /usr/lib64/libevent-2.1.so.6
ln -s /usr/lib/libevent-2.1.so.6 /usr/local/lib/libevent-2.1.so.6
ln -s /usr/local/lib/libevent-2.1.so.6 /usr/lib/libevent-2.1.so.6
ln -s . zsh
locate
locate /
locate /|fzf
locate /|fzf -q "$LBUFFER"
locate /|fzf -q $LBUFFER
locate insert-last-command-ouput
locate insert-last-command-output
log
log out
ls
ls *
LS
ls .bash*
ls build*
ls conda
ls ctags.
ls ctags.*
ls /etc/shells
ls /etc/shells/*
ls -f tm*
ls -f tm*.tar
ls|fzf
ls .git
ls --help|ffzy
ls --help|fzy
ls input*
ls ma*
ls make
ls make*
ls *.sh
ls tmux
ls *tmux
ls *tmux*
ls tmux*
ls .tmux.config
ls /usr/bin/
ls /usr/bin/zsh
ls /usr/lib|fzf
ls /usr/local/lib|fzf
ls vim
ls .vim*
ls .zshrc
make
make CMAKE_BUILD_TYPE=Release
make distclean
make install
make verify
man fzf|fzf
man fzy|fzf
man locate
man tmux
man Vim
man Vim|fzy
man zle
man zsh|fzf
man zsh|fzy
_marker_
 marker mark --command=''
 marker mark --command='cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> {{conda_update.sh}}),f2:execute(less {{conda_update.sh}})"'
 marker mark --command='cat /root/.bash_history_summary|fzf --multi --bind "f1:execute(echo {} >> conda_update.sh),f2:execute(less conda_update.sh)"'
 marker mark --command='dklf'
 marker mark --command='fzf --bind "f1:execute(cat {} >> conda_update.sh)+abort"'
 marker mark --command='git log --oneline | fzf --multi --preview '"'"'git show {+1}'
 marker mark --command='git log --oneline | fzf --multi --preview '"'"'git show {+1}'"'"''
 marker mark --command='git ls-tree -r master --name-only|fzf --multi --preview '"'"'git diff {+1}'"'"''
 marker mark --command='let g:ctrlp_cmd='"'"'CtrlP :pwd'"'"''
 marker mark --command='proxychains curl --cacert /etc/ssl/certs/ca-certificates.crt https://packages.cloud.google.com/apt/doc/apt-key.gpg'
 marker mark --command='whence -f insert-last-command-output'
marker remove
mkdir autoload
mkdir nvim
mkdir -p /root/bin
mkdir test
mkdir .vimdot
mv fzy_locate hgss
mv google-cloud-sdk.list.backup /opt
mv google-cloud-sdk.list.save.backup /opt
mv init.vim init__.vim
mv last_command.zsh last_command
mv marker.sh marker.sh.backup
mv /root/.oh-my-zsh /root/.pre-oh-my-zsh
mv -r /root/.oh-my-zsh /root/.pre-oh-my-zsh
mv -r zsh zsh_backup
mv test_rmlater
mv test test_rmlater
mv .vim .vim.backup
mv zsh zsh_backup
n
ncdu -f /data/ncdu_export 
neovim
nethogs eth2
nethogs --help
nethogs -t eth2
netstat -ano|grep 7778
netstat -ano|grep 8888
netstat -anop|fzf
netstat -anop|fzy
nhop
nohup python -m http.server 7778 &
nop
nvim init.vim
nvim init.vim.backup
nvim -version
nvim --version
$path
pgrep tmux
ping baidu.com
ping -v baidu.com
/proc/2606/exe attach
proxychains apt-get update
proxychains curl --cacert /etc/ssl/certs/ca-certificates.crt https://packages.cloud.google.com/apt/doc/apt-key.gpg
proxychains curl --cacert /etc/ssl/certs/ca-certificates.crt https://packages.cloud.google.com/apt/doc/apt-key.gpg|sudo apt-key add-
proxychains curl --catcert /etc/ssl/certs/ca-certificates.crt https://packages.cloud.google.com/apt/doc/apt-key.gpg
proxychains curl http://packages.cloud.google.com/apt/doc/apt-key.gpg
proxychains curl https://packages.cloud.google.com/apt/doc/apt-key.gpg
proxychains curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
proxychains make CMAKE_BUILD_TYPE=Release
proxychains /root/.fzf/install
ps aux|grep 7778
ps aux|grep tmux
pwd
python inputs_pre.py
python install.py
python -m http.server 7778
q
rm .git
rm google-cloud-sdk.list
rm google-cloud-sdk.list.save
rm init.vim
rm ls
rm n
rm -r .git
rm -r nvim
rm -r  test_rmlater
rm -r zsh
rm -r zsh_backup
rm .tmux.conff.local
rm .tmux.conf.local
rm .vimrc.bundles
rm vimrc.bundles
rm zsh
rm .zsh
rm zsh_backup
/root/.bin/cat
service docker
service docker stop
service --full-restart
service list
service rc.local --full-restart
service rc.local restart
service rc.local start
service --status-all
set
setopt xtrace
set -x
sh autogen.sh
sh build-zsh.sh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
shopt -s extdebug
sjif
source activate
  source ~/.init.local\
source theme.sh
source .tmux.conf
  source ~/.vimrc.local
  source ~/.vimrc.local\
start7778
sudo add-apt-repository ppa:neovim-ppa/stable
sudo add-apt-repository ppa:neovim-ppa/unstable
sudo add-apt-repository -r ppa:neovim-ppa/stable
sudo apt-get dowload neovim
sudo apt-get download neovim
sudo apt-get install ctags
sudo apt-get install neovim
sudo apt-get install NeoVim
sudo apt-get install software-properties-common
sudo apt-get install update
sudo apt-get neovim
sudo apt-get remove google-cloud-sdk
sudo apt-get search neovim
sudo apt-get update
sudo checkinstall -y --pkgname=zsh --pkgversion=$ZSH_VERSION --pkglicense=MIT make install install.info 
sudo chsh
sudo make install
sudo nethogs docker0
sudo nethogs eth2
sudo proxychains apt-get update
sudo proxychains curl --cacert /etc/ssl/certs/ca-certificates.crt https://packages.cloud.google.com/apt/doc/apt-key.gpg|sudo apt-key add -
sudo proxychains curl --cacert /etc/ssl/certs/ca-certificates.crt https://packages.cloud.google.com/apt/doc/apt-key.gpg|sudo apt-key add-
supervisor
su root
su yan
./taat
tar xf libevent-2.1.8-stable.tar.gz  libevent-2.1.8-stable
tar xvzf zsh-5.4.2.tar.gz
tar xzf zsh-5.4.2.tar.gz
tar xzf zsh-5.4.2.tar.gz .
tat
tldr -
tldr clear
tldr conda_update
tldr conda_update.md
tldr curl
tldr dd
tldr dd2
tldr dd2.md
tldr -|fzf
tldr git
tldr git add
tldr git_add
tldr git-add
tldr git-add|fzy
tldr git|fzf
tldr git|fzy
tldr git-list|fzy
tldr -h
tldr --help
tldr -h|fzf
tldr -h|fzy
tldr -l
tldr -l|fzf
tldr list
tldr --list
tldr --list|fzf
tldr --list|fzy
tldr list|fzy
tldr -p
tldr -p linux
tldr sysclt
tldr system
tldr systemctl
tldr -u
tldr -u conda_update
tldr -u dd2.md
tldr update
tldr --update
tldr upstart
tldr vim
tldr xclip
tmux
tmux 
tmux a
tmux -a
tmux a -t 0
tmux a -t 1
tmux a -t {{name}}
tmux attach
tmux a -t today
tmux a -t w1
tmux a -t workdir
tmux a workdir
tmux bind-key
tmux bind-key list
tmux bind-key ls
./.tmux.conf
tmux -c source tmux.conf.symlink
tmux -c term
tmux -c $term
tmux -f aliases
tmux kill-sesion 2
tmux kill-session
tmux kill-session 0
tmux kill-session 2
tmux kill-session 3
tmux kill-session 4
tmux kill-session a -t 2
tmux kill-sessions
tmux kill-session -t 0
tmux kill-session -t 2
tmux kill-session -t 3
tmux kill-session -t 4
tmux kill-session -t 5
tmux list
tmux list-sessio
tmux list-session
tmux list-sessions
tmux list-windows
tmux ls
tmux --L test
tmux new-session 
tmux new-session -n today
tmux new-session -n w1
tmux new-session today
tmux new -s today
tmux new -s workdir
tmux new-window -kn w1
tmux new-window -n w1
tmux source
tmux source ./dotfiles/tmux.conf
tmux source-file ./.tmux.conf
tmux source-file .tmux.conf
tmux source /root/.tum.config
tmux source /root/.tumx.config
tmux source .thumbnails
tmux source ./.tmux.conf
tmux source .tmux.conf
tmux-source .tmux.conf
tmux source ./.tmux.conf.local
tmux source .tmux.conf.local
tmux source ./tmux.conf.symlink
tmux source tmux.conf.symlink
tmux swap-p
tmux swap-pane
tmux swapp -s
tmux switch-client
tmux term
tmux --term
./tmux/tmux
tmux -v
tmux -version
tmux --version
tmux -v source tmux.conf.symlink
tmux -vsource tmux.conf.symlink
top
type -a insert-last-command-output
type /data/src/vim
type /data/vim/src/vim
type -f vim
type insert-last-command-output
typeset -ft fzf-completion
typeset -ft insert-last-command-output
typeset +ft insert-last-command-output
type vim
type .zsh
unzip -t ctags58.zip
unzip -x ctags58.zip 
us
useradd -s /bin/zsh-beta root
usermod
usermod -s /bin/bash root
usermod -s /bin/zsh-beta root
usermod -s /bin/zsh root
/usr/bin/vim --version
/usr/bin/zsh
uzip -t ctags58.zip
vf
vim 
vim .
vim +10 history.zsh
vim +112 vimrc
vim +11 history.zsh
vim +16 .zshrc
vim +17 /root/dotfiles/vimrc.bundles
vim +54 .bash_aliases
vim +5 history.zsh
vim +5 /root/.zshrc
vim +8 .zshrc
vim +9 history.zsh
vim .bash_aliases
vim completion.zsh
vim conda_update.md
vim ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml
.vimdot
vim dotfiles/vimrc.bundles
vim /etc/apt/sources.list
vim /etc/rc.local
vim .fzf.zsh
vim fzy_locate
vim gits.sh
vim --help|fzy
vim hgss
vim history.zsh
vim index.json
vim init.vim
vim install
vim install_marker.sh
vim install.sh
vim last_command
vim last_command.zsh
vim libevent_install.sh
vim marker.sh
vim nvim
vim path_local.zsh
vim path.zsh
vim rc.local
vim README
vim renderer.py
vim /root/dotfiles
vim /root/dotfiles/vimrc.bundles
vim /root/.zshrc
vim tags
vim theme.sh
vim .tmux.conf
vim tmux.conf
vim .tmux.conf.loal
vim .tmux.conf.local
vim --version
vim vimrc
vim .vimrc
vim .vimrc.bundles
vim vimrc.bundles
vim /win3/bashscript/sshs.sh
vim .zhistory
vim .zhrc
vim .zsh
vim zshrc
vim .zshrc
vim ../.zshrc
vim .zshrc.local
vnc
wget http://baidu.com
wget https://github.com/libevent/libevent/releases/download/release-2.1.8-stable/libevent-2.1.8-stable.tar.gz
wget https://packages.cloud.google.com/apt/doc/apt-key.gpg
wget  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
wget https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
wget https://www.anaconda.com/blog/developer-blog/how-to-get-ready-for-the-release-of-conda-4-4/
wget rawgit.com/transcode-open/apt-cyg/master/apt-cyg
whence -a insert-last-command-output
whence -f fzf-file-widget
whence -f insert-last-command-output
whence -f PATH
whence -f tmux
whence fzf
whence  insert-last-command-output
whence neovim
whence PATH
whence python
whence python2
whence python3
whence tmux
whence -t neovim
whence -v adduser
whence -v bindkey
whence -v fzf
whence -v fzf-cd-widget
whence -v fzf-cd-widget path
whence -v _fzf_complete_export
whence -v _fzf_complete_unset
whence -v fzf-completion
whence -v _fzf_feed_fifo
whence -v  git_prompt_info
whence -v hgg
whence -v hgs
whence -v hgss
whence -v HISTFILE
whence -v $HISTFILE
whence -v &HISTFILE
whence -v HISTFILES
whence -v history-search-backward
whence -v insert-last-command-output
whence -v _marker_get
whence -v neovim
whence -v nvim
whence -v PATH
whence -v $PATH
whence -v python3
whence -v tmux
whence -v zle
whence -v _zsh-mime-handler
whence -v ZSH_NAME
whence -v ZSH_VERSION
whence ZSH_VERSION
When nethogs is running, press:
where
where accept-and-hold
where cat
where ctags
where -f fzf-file-widget
where  fzf-file-widget
where  insert-last-command-output
whereis PATH
whereis $PATH
whereis ZSH_VERSION
where vim
where whence
where zsh-beta
where ZSH_VERSION
which
which -a insert-last-command-output
which -ap insert-last-command-output
which-command insert-last-command-output
which fzf
which fzy
which insert-last-command-output
which insert-last-command-output()
which PATH
which -p insert-last-command-output
which tldr
which tmux
which zle
which zsh
who $HSLINES
whO PATH
whos
who vim
x
 x
xclip
xclip --help
xclip --hep
xcode
"^X" insert-last-command-output
xterm
zle 
ZLE
zle accept-line
zle beginning-of-line
zle --help
zle insert-last-word
zle -l
zle -l|fzf
zle -l|fzy
zle-line-finish
zle -N
zle -R
zle -R '' $display
zle read-command
zle redisplay
zle .redisplay
zle reload
zle reset-prompt
zless
zmoload zle
zmoload .zsh/zle
zmoload zsh/zle
zsh
zsh activate
zsh-beta
zsh-beta --version
zsh --debug
zsh -|fzy
zsh -**|fzy
.zsh gitbk.sh
zsh --help|fzf
ZSH_NAME
zsh /.tmux.conf
zsh .tmux.conf
zsh -v
zsh --v
zsh --verbose
zsh --versio
zsh -version
zsh --version
$ZSH_VERSION
zsh -v|fzy
zsh -vi
zsh --vi
zshzle
